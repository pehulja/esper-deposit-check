#deposit.couchbase.window.create=create window CouchbaseWindow.couchbase:couchbasevdw().win:length(3) as DepositIncomeEvent
#deposit.couchbase.window.populate=insert into CouchbaseWindow select * from DepositIncomeEvent
#deposit.couchbase.window.listen=select count(*) as num from CouchbaseWindow
#deposit.couchbase.window.select.criteria=select * from CouchbaseWindow where accountName = 'Account1' and income = 7
#atmtransaction.window.create=create window VDW{0}.std:groupwin(account).win:length({1}).couchbase:couchbasevdw() as ATMTransactionEvent

# Complete example, but without group by. DON`T REMOVE
atmtransaction.window.create=create window VDW{0}.couchbase:couchbasevdw() as ATMTransactionEvent
atmtransaction.window.subscribe=insert into VDW{0} select * from ATMTransactionEvent
#atmtransaction.window.fraud=select wnd.account as name, sum(wnd.transactionAmount) as total  from VDW{0} wnd group by wnd.account having wnd.account = "Account_0" and sum(wnd.transactionAmount) > {1}
atmtransaction.window.fraud=select wnd.account as name, sum(wnd.transactionAmount) as total  from VDW{0} wnd full outer join ATMTransactionEvent.std:lastevent() event on event.account = wnd.account group by wnd.account having wnd.account = "Account_0" and sum(wnd.transactionAmount) > {1}
# Complete example, but without group by

#atmtransaction.window.fraud=select ev.account as a, sum(w.transactionAmount) as total from ATMTransactionEvent.std:lastevent() ev, VDW{0} w where ev.account=w.account group by ev.account